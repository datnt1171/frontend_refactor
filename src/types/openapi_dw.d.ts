/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/crm/factories": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Factories */
        get: operations["get_factories_api_crm_factories_get"];
        put?: never;
        /**
         * Create Factory
         * @description Create a new factory
         */
        post: operations["create_factory_api_crm_factories_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/crm/factories/{factory_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Factory By Id
         * @description Get a specific factory by factory_code
         */
        get: operations["get_factory_by_id_api_crm_factories__factory_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * Update Factory
         * @description Update a factory's is_active and/or has_onsite status
         *     Only is_active and has_onsite fields can be modified
         */
        patch: operations["update_factory_api_crm_factories__factory_id__patch"];
        trace?: never;
    };
    "/api/crm/retailers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Retailers */
        get: operations["get_retailers_api_crm_retailers_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/crm/retailers/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Retailer By Id
         * @description Get a specific retailer by id
         */
        get: operations["get_retailer_by_id_api_crm_retailers__id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/crm/blueprints": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Blueprints
         * @description Get all blueprints with optional factory filter
         */
        get: operations["get_blueprints_api_crm_blueprints_get"];
        put?: never;
        /**
         * Create Blueprint
         * @description Create a new blueprint with file upload
         */
        post: operations["create_blueprint_api_crm_blueprints_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/crm/blueprints/{blueprint_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Blueprint
         * @description Get a specific blueprint by ID
         */
        get: operations["get_blueprint_api_crm_blueprints__blueprint_id__get"];
        /**
         * Update Blueprint
         * @description Update an existing blueprint
         */
        put: operations["update_blueprint_api_crm_blueprints__blueprint_id__put"];
        post?: never;
        /**
         * Delete Blueprint
         * @description Delete a blueprint
         */
        delete: operations["delete_blueprint_api_crm_blueprints__blueprint_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Root */
        get: operations["root__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/health/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Health Check */
        get: operations["health_check_health__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/sales/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Sales Data */
        get: operations["get_sales_data_api_sales__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/wh-overall/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Wh Overall */
        get: operations["get_wh_overall_api_wh_overall__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Blueprint */
        Blueprint: {
            /**
             * Id
             * @description Blueprint UUID
             */
            id: string;
            /**
             * Factory
             * @description Factory code
             */
            factory: string;
            /**
             * Name
             * @description Blueprint name
             */
            name: string;
            /** @description Production line type */
            type: components["schemas"]["ProductionLineType"];
            /**
             * Description
             * @description Blueprint description
             */
            description?: string | null;
            /**
             * File Path
             * @description File storage path
             */
            file_path: string;
            /**
             * Filename
             * @description Original filename
             */
            filename: string;
            /**
             * File Size
             * @description File size in bytes
             */
            file_size: number;
            /**
             * Created At
             * Format: date-time
             * @description Creation timestamp
             */
            created_at: string;
            /**
             * Updated At
             * Format: date-time
             * @description Last update timestamp
             */
            updated_at: string;
        };
        /** BlueprintUpdate */
        BlueprintUpdate: {
            /**
             * Name
             * @description Blueprint name
             */
            name?: string | null;
            /** @description Production line type */
            type?: components["schemas"]["ProductionLineType"] | null;
            /**
             * Description
             * @description Blueprint description
             */
            description?: string | null;
        };
        /** Body_create_blueprint_api_crm_blueprints_post */
        BlueprintCreate: {
            /** Factory */
            factory: string;
            /** Name */
            name: string;
            /** Type */
            type: components["schemas"]["ProductionLineType"];
            /** Description */
            description?: string | null;
            /**
             * File
             * Format: binary
             */
            file: File
        };
        /**
         * Factory
         * @description Factory item for list view - matches your SQL SELECT
         */
        Factory: {
            /**
             * Factory Code
             * @description Factory code
             */
            factory_code: string;
            /**
             * Factory Name
             * @description Factory name
             */
            factory_name: string;
            /**
             * Is Active
             * @description Active status
             */
            is_active: boolean;
            /**
             * Has Onsite
             * @description Has onsite facilities
             */
            has_onsite: boolean;
        };
        /**
         * FactoryDetail
         * @description Detailed factory view - for single factory endpoint
         */
        FactoryDetail: {
            /**
             * Factory Code
             * @description Factory code
             */
            factory_code: string;
            /**
             * Factory Name
             * @description Factory name
             */
            factory_name: string;
            /**
             * Is Active
             * @description Active status
             */
            is_active: boolean;
            /**
             * Has Onsite
             * @description Has onsite facilities
             */
            has_onsite: boolean;
        };
        /** FactoryUpdate */
        FactoryUpdate: {
            /**
             * Is Active
             * @description Active status
             */
            is_active?: boolean | null;
            /**
             * Has Onsite
             * @description Has onsite facilities
             */
            has_onsite?: boolean | null;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** PaginatedResponse[Factory] */
        PaginatedFactoryList: {
            /**
             * Count
             * @description Total number of items
             * @example 123
             */
            count: number;
            /**
             * Next
             * @example http://api.example.org/factories/?offset=50&limit=50
             */
            next?: string | null;
            /**
             * Previous
             * @example http://api.example.org/factories/?offset=0&limit=50
             */
            previous?: string | null;
            /**
             * Results
             * @description Array of items
             */
            results: components["schemas"]["Factory"][];
        };
        /** PaginatedResponse[Retailer] */
        PaginatedRetailerList: {
            /**
             * Count
             * @description Total number of items
             * @example 123
             */
            count: number;
            /**
             * Next
             * @example http://api.example.org/factories/?offset=50&limit=50
             */
            next?: string | null;
            /**
             * Previous
             * @example http://api.example.org/factories/?offset=0&limit=50
             */
            previous?: string | null;
            /**
             * Results
             * @description Array of items
             */
            results: components["schemas"]["Retailer"][];
        };
        /**
         * ProductionLineType
         * @enum {string}
         */
        ProductionLineType: "PALLET" | "HANGING" | "ROLLER";
        /**
         * Retailer
         * @description Retailer item for list view
         */
        Retailer: {
            /**
             * Id
             * Format: uuid
             * @description Retailer UUID
             */
            id: string;
            /**
             * Name
             * @description Retailer name
             */
            name: string;
        };
        /**
         * RetailerDetail
         * @description Detailed retailer view - for single retailer endpoint
         */
        RetailerDetail: {
            /**
             * Id
             * Format: uuid
             * @description Retailer UUID
             */
            id: string;
            /**
             * Name
             * @description Retailer name
             */
            name: string;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    get_factories_api_crm_factories_get: {
        parameters: {
            query?: {
                is_active?: boolean;
                has_onsite?: boolean;
                search?: string;
                offset?: number;
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_Factory_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_factory_api_crm_factories_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Factory"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Factory"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_factory_by_id_api_crm_factories__factory_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                factory_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FactoryDetail"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_factory_api_crm_factories__factory_id__patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                factory_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["FactoryUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Factory"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_retailers_api_crm_retailers_get: {
        parameters: {
            query?: {
                search?: string;
                offset?: number;
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_Retailer_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_retailer_by_id_api_crm_retailers__id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RetailerDetail"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_blueprints_api_crm_blueprints_get: {
        parameters: {
            query?: {
                factory?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Blueprint"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_blueprint_api_crm_blueprints_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": components["schemas"]["Body_create_blueprint_api_crm_blueprints_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Blueprint"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_blueprint_api_crm_blueprints__blueprint_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                blueprint_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Blueprint"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_blueprint_api_crm_blueprints__blueprint_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                blueprint_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BlueprintUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Blueprint"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_blueprint_api_crm_blueprints__blueprint_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                blueprint_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    root__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    health_check_health__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    get_sales_data_api_sales__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    get_wh_overall_api_wh_overall__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
}
